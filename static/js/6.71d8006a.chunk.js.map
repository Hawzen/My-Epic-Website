{"version":3,"sources":["sketches/trianglesCanvas.js"],"names":["triangle","props","s1","s2","s3","lins","size","even","t","_jsx","Sketch","setup","sketch","canvasParentRef","createCanvas","window","screen","width","height","parent","colorMode","HSL","frameRate","density","y","lin","x","push","createVector","random","createSlider","position","hide","pos","draw","i","length","j","hu","map","noise","sliderColor","color","value","fill","stroke","t2","abs","sin","cos","TypeError","className"],"mappings":"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","file":"static/js/6.71d8006a.chunk.js","sourcesContent":["import React from \"react\";\nimport Sketch from \"react-p5\";\nlet triangle = (props) => {\n  let lins = [];\n  let size = 10;\n  let even = true;\n  let t = 0;\n  let s1, s2, s3;\n\n  const setup = (sketch, canvasParentRef) => {\n    sketch\n      .createCanvas(window.screen.width * 1.5, window.screen.height * 1.5)\n      .parent(canvasParentRef);\n    sketch.colorMode(sketch.HSL);\n    sketch.frameRate(30);\n    size = props.density || 125;\n    lins = [];\n    even = true;\n    for (let y = -size; y < sketch.height * 1.2; y += size) {\n      let lin = [];\n      even = !even;\n      for (let x = -size; x < sketch.width * 1.1; x += size) {\n        lin.push(\n          sketch.createVector(\n            x + sketch.random(0, size),\n            y + sketch.random(size / 5, size / 3)\n          )\n        );\n      }\n      lins.push(lin);\n    }\n\n    let pos = 50;\n    s1 = sketch.createSlider(0, 360, 220, 1);\n    s1.position(10, pos);\n    s1.hide();\n    s2 = sketch.createSlider(0, 100, 30, 1);\n    s2.position(10, pos + 20);\n    s2.hide();\n    s3 = sketch.createSlider(0, 100, 35, 1);\n    s3.position(10, pos + 40);\n    s3.hide();\n  };\n\n  const draw = (sketch) => {\n    t += 0.01;\n    //Spaghetti Code\n    for (let i = 0; i < lins.length - 1; i += 1) {\n      for (let j = 0; j < lins[0].length - 1; j += 1) {\n        let hu = sketch.map(sketch.noise(t, j, i), 0, 1, 0, 30);\n        let sliderColor = sketch.color(\n          s1.value() + hu,\n          s2.value() - hu,\n          s3.value() + hu\n        );\n        //   let c = sketch.color(hu, perlin, perlin);\n        //   let c2 = sketch.color(0, perlin*10, 10);\n        sketch.fill(sliderColor);\n        sketch.stroke(0);\n\n\t\t// Movements, differnet perlin noises\n\t\tlet t2 = t/8;\n\t\tlet perlin = -sketch.abs(sketch.map(sketch.noise(t2, i, j)*sketch.sin(t2), 0, 1, 0, 100));\n\t\tlet perlin2 = -sketch.abs(sketch.map(sketch.noise(t2, i, j)*sketch.cos(t2), 0, 1, 0, 100));\n\t\tlet perlin3 = sketch.map(sketch.noise(i, t2, j)*sketch.cos(t2), 0, 1, 0, 100);\n\n\t\t\n        try {\n          if (i % 2 === 0)\n            sketch.triangle(\n              lins[i][j].x,\n              lins[i][j].y,\n              lins[i + 1][j].x,\n              lins[i + 1][j].y,\n              lins[i][j + 1].x,\n              lins[i][j + 1].y,\n            );\n          sketch.triangle(\n            lins[i + 1][j + 1].x,\n            lins[i + 1][j + 1].y,\n            lins[i + 2][j + 1].x,\n            lins[i + 2][j + 1].y,\n            lins[i + 1][j].x,\n            lins[i + 1][j].y,\n          );\n          if (j < lins[1].length - 1 && i % 2 === 1)\n            sketch.triangle(\n              lins[i][j].x,\n              lins[i][j].y,\n              lins[i][j + 1].x,\n              lins[i][j + 1].y,\n              lins[i - 1][j + 1].x,\n              lins[i - 1][j + 1].y\n            );\n          sketch.triangle(\n            lins[i + 1][j].x,\n            lins[i + 1][j].y,\n            lins[i + 1][j + 1].x,\n            lins[i + 1][j + 1].y,\n            lins[i][j].x,\n            lins[i][j].y\n          );\n        } catch (TypeError) {}\n      }\n    }\n  };\n  return <Sketch setup={setup} draw={draw} className=\"sketch-container\" />;\n};\nexport default triangle;\n"],"sourceRoot":""}